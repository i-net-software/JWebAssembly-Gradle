plugins {
  id "com.gradle.plugin-publish" version "0.10.0"
}


apply plugin: 'java-library'
apply plugin: 'maven'

group 'de.inetsoftware'
archivesBaseName = 'jwebassembly-gradle'
version = '0.1'

dependencies {
    compile gradleApi()
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'src'
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('../repo'))
        }
    }
}

// add the source codes for Eclipse for gradleApi(). You need to use a gradle distribution with "-all" like https://services.gradle.org/distributions/gradle-4.3-all.zip
apply plugin: 'eclipse'
import org.gradle.plugins.ide.eclipse.model.*
eclipse {
    classpath {
        file {
            whenMerged {Classpath cp ->
                String gradleHome = gradle.getGradleHomeDir().absolutePath.replace(File.separator, '/')
                String gradleSrc = "${gradleHome}/src"
                cp.entries.each {ClasspathEntry entry ->
                    if ((entry in AbstractLibrary) && (entry.library.file.name.startsWith('gradle-'))) {
                        entry.sourcePath = new org.gradle.plugins.ide.eclipse.model.internal.FileReferenceFactory().fromPath(gradleSrc)
                    }
                }
            }
        }
    }
}

pluginBundle {
    website = 'https://github.com/i-net-software/JWebAssembly-Gradle'
    vcsUrl = 'https://github.com/i-net-software/JWebAssembly-Gradle'
    description = 'A Gradle plugin for the JWebAssembly compiler.'
    tags = ['jwebassembler', 'webassembler', 'wasm' ]

    plugins {
        jwebassemblerPlugin {
            id = 'de.inetsoftware.jwebassembly'
            displayName = 'Gradle JWebAssembly plugin'
        }
    }
}
